{"version":3,"sources":["Custom/Navbar.js","Custom/TextForm.js","Custom/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","placeholder","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Heading","rows","value","onChange","event","console","log","target","onClick","toUpperCase","toLowerCase","split","reverse","join","navigator","clipboard","writeText","newText","filter","element","length","About","color","backgroundColor","myStyle","setmyStyle","_useState3","_useState4","btnText","setBtnText","style","aria-labelledby","data-bs-parent","border","App","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.f909c989.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar\r\n    (props) {\r\n    return (\r\n        <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                        </li>\r\n                    </ul>\r\n                    <form className=\"d-flex\" role=\"search\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const handleOnClick = () => {\r\n        const a = text.toUpperCase();\r\n        setText(a)\r\n    }\r\n    const handleOnChange = (event) => {\r\n        console.log(\"text changed\")\r\n        setText(event.target.value)\r\n\r\n    }\r\n    const handleDownClick = (event) => {\r\n        const a = text.toLowerCase();\r\n        setText(a);\r\n    }\r\n    const handleClear = (event) => {\r\n        setText(\"\");\r\n    }\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(text);\r\n    }\r\n    const handleReverse = () => {\r\n        setText(text.split('').reverse().join(''));\r\n    }\r\n    const handleExtraSpaces = () => {\r\n        let newText= text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <h1>{props.Heading}</h1>\r\n                <div className=\"mb-3\" >\r\n                    <textarea className=\"form-control\" id=\"mybox\" rows=\"8\" placeholder=\"Enter text here\" value={text} onChange={handleOnChange}></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary\" onClick={handleOnClick}>Convert to Uppercase</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleDownClick}>Convert to Lowercase</button>\r\n                <button className=\"btn btn-primary my-3\" onClick={handleClear}>Clear</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleReverse}>Reverse</button>\r\n                <button className=\"btn btn-primary my-3\" onClick={handleCopy}>Copy</button>\r\n                <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n            </div>\r\n            <div className=\"container my-2\">\r\n                <h2>Your Text Summary</h2>\r\n                <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n                <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} minutes to read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Nothing to Preview!\"}</p>\r\n            </div>\r\n\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function About() {\r\n    const [myStyle, setmyStyle] = useState({\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n    })\r\n    const [btnText, setBtnText] = useState(\"Enable Dark Mode\")\r\n\r\n    const toggleStyle = () => {\r\n        if (myStyle.color === 'black') {\r\n            setmyStyle({\r\n                color: 'white',\r\n                backgroundColor: 'black',\r\n                border: '1px solid white'\r\n            })\r\n            setBtnText(\"Enable Light Mode\")\r\n        }\r\n        else {\r\n            setmyStyle({\r\n                color: 'black',\r\n                backgroundColor: 'white'\r\n            })\r\n            setBtnText(\"Enable Dark Mode\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\" style={myStyle}>\r\n            <h1>About Us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            <strong>Our Creators</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            <strong>We don't have a big team. We have a solo creator, Bilix. He is blessed with great friends. Be like Bilix</strong>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            <strong>Our Mission</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            <strong>Our Mission is to keep creating websites and inspire more people to work hard</strong>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            <strong>Help Us</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" style={myStyle}>\r\n                            <strong>You can help us by working hard MATE</strong>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <button>Enable Dark Mode</button> */}\r\n            <button onClick={toggleStyle} type=\"Enable Dark Mode\" className=\"btn btn-primary my-3\">{btnText}</button>\r\n        </div>\r\n    )\r\n}\r\n","// import logo from './logo.jpg';\nimport Navbar from './Custom/Navbar';\nimport TextForm from './Custom/TextForm';\nimport './App.css';\nimport React from 'react';\nimport About from './Custom/About';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Navbar title=\"BilixUtils\" />\n        <div className=\"container my-3\">\n          <Routes>\n            <Route exact path=\"/about\" element={<About />} />\n            <Route exact path=\"/\" element={<TextForm Heading=\"Enter the Text to Analyze\" />} />\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}